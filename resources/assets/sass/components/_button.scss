// This can be improved
$button-colors: (
  primary: (
    backgroundColor: 'primary-600',
    textColor: 'white',
    hover: (
      backgroundColor: 'primary-700',
      textColor: 'white',
    ),
  ),
  primary-lighter: (
    backgroundColor: 'primary-500',
    textColor: 'white',
    hover: (
      backgroundColor: 'primary-700',
      textColor: 'white',
    ),
  ),
  secondary:
    (
      backgroundColor: 'transparent',
      textColor: 'slate-600',
      borderColor: 'slate-200',
      hover: (
        borderColor: 'slate-200',
        backgroundColor: 'white',
        textColor: 'slate-600',
      ),
    ),
  white: (
    backgroundColor: 'white',
    textColor: 'slate-600',
    borderColor: 'slate-200',
    hover: (
      backgroundColor: 'slate-100',
      textColor: 'slate-900',
    ),
  ),
  light: (
    backgroundColor: 'primary-50',
    textColor: 'slate-700',
    hover: (
      backgroundColor: 'slate-300',
      textColor: 'slate-900',
    ),
  ),
  success: (
    backgroundColor: 'emerald-600',
    textColor: 'white',
    hover: (
      backgroundColor: 'emerald-700',
      textColor: 'white',
    ),
  ),
  danger: (
    backgroundColor: 'red-600',
    textColor: 'white',
    hover: (
      backgroundColor: 'red-700',
      textColor: 'white',
    ),
  ),
);

@function map-deep-get($map, $keys...) {
  $scope: $map;
  $i: 1;

  @while (type-of($scope) == map) and ($i <= length($keys)) {
    $scope: map-get($scope, nth($keys, $i));
    $i: $i + 1;
  }

  @return $scope;
}

.buttons {
  @apply md:space-x-4;
}

.button {
  @apply py-2 px-4 inline-block rounded-md font-semibold bg-transparent;
  @apply transition duration-200 motion-safe:transition;
  @apply border border-transparent;
  @apply focus:outline-none;

  $parent: #{&};

  @each $color, $properties in $button-colors {
    $bgColor: map-deep-get($button-colors, $color, 'backgroundColor');
    $textColor: map-deep-get($button-colors, $color, 'textColor');

    $borderColor: if(
      map-deep-get($button-colors, $color, 'borderColor'),
      map-deep-get($button-colors, $color, 'borderColor'),
      'transparent'
    );

    $hoverBgColor: map-deep-get($button-colors, $color, 'hover', 'backgroundColor');
    $hoverTextColor: map-deep-get($button-colors, $color, 'hover', 'textColor');

    $hoverBorderColor: if(
      map-deep-get($button-colors, $color, 'hover', 'borderColor'),
      map-deep-get($button-colors, $color, 'hover', 'borderColor'),
      'transparent'
    );

    $invertedBgColor: map-deep-get($button-colors, $color, 'textColor');
    $invertedTextColor: map-deep-get($button-colors, $color, 'backgroundColor');

    &--#{$color} {
      @apply bg-#{$bgColor} text-#{$textColor} border-#{$borderColor};
      @apply hover:bg-#{$hoverBgColor} hover:text-#{$hoverTextColor} hover:border-#{$hoverBorderColor};

      &#{$parent}--outline {
        @apply bg-transparent border-#{$bgColor} text-#{$bgColor};
        @apply hover:bg-#{$bgColor} hover:text-#{$textColor};
      }

      &#{$parent}--invert {
        @apply bg-#{$invertedBgColor} text-#{$invertedTextColor};
        @apply hover:bg-#{$invertedTextColor} hover:text-#{$invertedBgColor};

        @apply active:ring-#{$invertedTextColor};
      }
    }
  }

  &:not(&--icon) {
    @apply text-sm;
    @apply focus:ring-primary-600 focus:ring-2 focus:ring-offset-2;
    @apply focus:ring-primary-600 active:ring-2 active:ring-offset-2;
  }

  &--processing {
    @apply animate-spin opacity-25;
  }

  &--shadow {
    @apply shadow-md;
  }

  &--round {
    @apply rounded-full;
  }

  // FIXME: hacky fix
  &--icon {
    @apply text-base p-2 border-transparent;

    svg {
      height: 1rem;
      width: 1rem;
    }

    line-height: 0;
  }

  &--small {
    @apply py-1 px-2;
  }

  &--fullwidth {
    @apply w-full;
  }

  &--fullwidth-touch {
    @apply flex w-full md:inline-block md:w-auto;
  }
}
